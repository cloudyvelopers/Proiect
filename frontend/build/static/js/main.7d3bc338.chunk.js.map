{"version":3,"sources":["containers/Index.js","containers/Teams.js","components/students/Student.js","containers/Students.js","containers/About.js","containers/Login.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Index","react_default","a","createElement","Component","Teams","Student","profile","this","props","ListItem_default","ListItemAvatar_default","profilePicture","Avatar_default","src","ListItemText_default","name","Button_default","href","githubProfile","target","label","secondary","API_BASE_URL","process","REACT_APP_API_BASEURL","console","log","Students","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","students","_this2","axios","get","then","result","setState","data","results","List_default","map","student","students_Student","key","id","About","title","style","width","height","border","border-radius","overflow","sandbox","Login","Header","handleChange","event","value","history","push","pages","pathname","location","length","substr","index","indexOf","labels","classes","className","root","AppBar_default","position","Tabs_default","onChange","element","Tab_default","React","withRouter","withStyles","theme","flexGrow","backgroundColor","palette","background","paper","App","BrowserRouter","components_Header","padding","Route","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d3bc338.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Index extends Component {\n    render() {\n      return (<h1>Home</h1>)\n    }\n}\n\nexport default Index\n","import React, { Component } from 'react';\n\nclass Teams extends Component {\n    render() {\n      return (<h1>Echipe</h1>)\n    }\n  }\n\nexport default Teams","import React, { Component } from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nclass Student extends Component {\n    render() {\n      let profile = this.props.profile;\n      \n      return (\n        <ListItem>\n            <ListItemAvatar>\n                {\n                profile.profilePicture \n                    ? <Avatar src={profile.profilePicture} />\n                    : <Avatar src=\"nopic.png\" />\n                }\n            </ListItemAvatar>\n            <ListItemText>{profile.name}</ListItemText>\n            <br/>\n            <Button\n              href={profile.githubProfile}\n              target=\"_blank\"\n              label=\"GitHub Link\"\n              secondary={true}\n            >Github</Button>\n      </ListItem>\n      )  \n    }\n  }\n\n  export default Student","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\n\nimport axios from 'axios'\n\nimport Student from '../components/students/Student'\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASEURL + '/api'\nconsole.log(process.env)\nclass Students extends Component {\n    constructor(props) {\n      super(props) \n      this.state = {\n        students: []\n      }\n    }\n\n    componentDidMount() {\n      axios.get(API_BASE_URL + '/students').then((result) => {\n        this.setState({students: result.data.results})\n      })\n    }\n\n    render() {\n      return (\n        <div>\n        <h1>Studenți</h1>\n        <List>\n          {this.state.students.map((student) => <Student key={student.id} profile={student} />)}\n        </List>\n        </div>\n      )\n    }\n  }\n\nexport default Students","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n      return (\n      <div>  \n        <h1>Despre</h1>\n        <p>Aplicație oferită ca exemplu pentru seminarul de Tehnologii Web</p>\n        <iframe title=\"Code Sample\" src=\"https://codesandbox.io/embed/m5vwjo4np9\" style={{width:\"100%\", height:\"500px\",border:0, \"border-radius\": \"4px\", overflow:\"hidden\"}} sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>\n      </div> \n      )\n    }\n}\n\nexport default About","import React, { Component } from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nclass Login extends Component {\n    render() {\n      return (\n      <div>  \n        <h1>Login</h1>\n        <Button\n              href={process.env.REACT_APP_API_BASEURL + '/auth/google'}\n              target=\"_blank\"\n              label=\"Login with google\"\n              secondary={false}\n            >Login with Google</Button>\n      </div> \n      )\n    }\n}\n\nexport default Login","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let pages = ['/', '/teams', '/students', '/about', '/login'];\n    let labels = ['Home', 'Echipe', 'Studenti', 'Despre', 'Login']\n\n    let pathname = this.props.location.pathname\n    pathname = pathname[pathname.length - 1] !== '/' ? pathname : pathname.substr(0, pathname.length - 1)\n\n    let index = pages.indexOf(pathname)\n\n    this.state = {\n        value: index,\n        pages: pages,\n        labels: labels\n    };\n  }\n  \n\n  handleChange = (event, value) => {\n    this.setState({ value });\n    this.props.history.push(this.state.pages[value])\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs value={value} onChange={this.handleChange}>\n            {this.state.labels.map((element) => <Tab label={element}/>)}\n          </Tabs>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(Header));\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Index from './containers/Index'\nimport Teams from './containers/Teams'\nimport Students from './containers/Students'\nimport About from './containers/About'\nimport Login from './containers/Login'\n\nimport Header from './components/Header'\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n        <Router>\n          <div>\n            <Header />\n            <div style={{padding:'10px'}}>\n              <Route path=\"/\" exact component={Index} />\n              <Route path=\"/teams/\" component={Teams} />\n              <Route path=\"/students/\" component={Students} />\n              <Route path=\"/about/\" component={About} />\n              <Route path=\"/login/\" component={Login} />\n            </div>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}